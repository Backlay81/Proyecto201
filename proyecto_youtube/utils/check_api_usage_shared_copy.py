"""
Script para verificar el consumo de unidades de la API de YouTube
"""

import sys
import os
from datetime import datetime

# Agregar el directorio credentials al path
sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'credentials'))

try:
    from googleapiclient.discovery import build
    from config import YOUTUBE_API_KEY
    
    def check_youtube_quota():
        """Verificar informaci√≥n de cuota de YouTube API"""
        print("üîç VERIFICANDO CONSUMO DE API YOUTUBE")
        print("=" * 50)
        
        # Informaci√≥n de configuraci√≥n actual
        print("üìã CONFIGURACI√ìN ACTUAL:")
        print(f"‚Ä¢ API Key configurada: {'‚úÖ S√≠' if YOUTUBE_API_KEY and YOUTUBE_API_KEY != 'tu_api_key_aqui' else '‚ùå No'}")
        
        # Costos conocidos de YouTube API v3
        print("\nüí∞ COSTOS YOUTUBE API v3:")
        print("‚Ä¢ search.list() = 100 unidades por request")
        print("‚Ä¢ videos.list() = 1 unidad por request")
        print("‚Ä¢ Cuota diaria gratuita = 10,000 unidades")
        print("‚Ä¢ Cuota por proyecto = 1,000,000 unidades/d√≠a (si se paga)")
        
        # C√°lculo de nuestro sistema
        print("\nüßÆ C√ÅLCULO NUESTRO SISTEMA:")
        print("‚Ä¢ Modo TESTING: 3 keywords m√°ximo")
        print("‚Ä¢ Por keyword: 1 search.list (100) + 1 videos.list (1) = 101 unidades")
        print("‚Ä¢ Total modo testing: 3 √ó 101 = 303 unidades m√°ximo")
        print("‚Ä¢ Porcentaje de cuota gratuita: 303/10,000 = 3.03%")
        
        print("\nüî• MODO PRODUCCI√ìN (si activamos):")
        print("‚Ä¢ 10-12 keywords: 10 √ó 101 = 1,010 unidades")
        print("‚Ä¢ Porcentaje de cuota gratuita: 1,010/10,000 = 10.1%")
        
        # Test b√°sico de conectividad
        try:
            youtube = build('youtube', 'v3', developerKey=YOUTUBE_API_KEY)
            
            # Hacer un request muy peque√±o para probar
            print("\nüß™ TEST DE CONECTIVIDAD:")
            request = youtube.search().list(
                part='snippet',
                q='test',
                maxResults=1,
                type='video'
            )
            response = request.execute()
            
            if response.get('items'):
                print("‚úÖ API funciona correctamente")
                print("üí° Este test consumi√≥ ~100 unidades")
            else:
                print("‚ö†Ô∏è  API responde pero sin resultados")
                
        except Exception as e:
            print(f"‚ùå Error en API: {e}")
            if "quotaExceeded" in str(e):
                print("üö® CUOTA EXCEDIDA - Has alcanzado el l√≠mite diario")
            elif "forbidden" in str(e).lower():
                print("üö® ACCESO DENEGADO - Verifica la API Key")
                
        # Estimaci√≥n para hoy
        print(f"\nüìÖ ESTIMACI√ìN PARA HOY ({datetime.now().strftime('%Y-%m-%d')}):")
        print("‚Ä¢ Si ejecutas modo testing: ~303 unidades")
        print("‚Ä¢ Quedar√≠an disponibles: ~9,697 unidades")
        print("‚Ä¢ Podr√≠as ejecutar: ~32 an√°lisis m√°s en modo testing")
        
    if __name__ == "__main__":
        check_youtube_quota()
        
except ImportError as e:
    print(f"‚ùå Error importando dependencias: {e}")
    print("üí° Ejecuta: pip install google-api-python-client")
except Exception as e:
    print(f"‚ùå Error general: {e}")
